var documenterSearchIndex = {"docs":
[{"location":"develop/#How-to-contribute","page":"Development","title":"How to contribute","text":"","category":"section"},{"location":"develop/#Download-the-project","page":"Development","title":"Download the project","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Similar to section \"Installation\", run","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"julia> using Pkg\n\njulia> pkg\"dev Pseudopotentials\"","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in Julia REPL.","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"Then the package will be cloned to your local machine at a path. On macOS, by default is located at ~/.julia/dev/Pseudopotentials unless you modify the JULIA_DEPOT_PATH environment variable. (See Julia's official documentation on how to do this.) In the following text, we will call it PKGROOT.","category":"page"},{"location":"develop/#instantiating","page":"Development","title":"Instantiate the project","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Go to PKGROOT, start a new Julia session and run","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"julia> using Pkg; Pkg.instantiate()","category":"page"},{"location":"develop/#How-to-build-docs","page":"Development","title":"How to build docs","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Usually, the up-to-state doc is available in here, but there are cases where users need to build the doc themselves.","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"After instantiating the project, go to PKGROOT, run (without the $ prompt)","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"$ julia --color=yes docs/make.jl","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in your terminal. In a while a folder PKGROOT/docs/build will appear. Open PKGROOT/docs/build/index.html with your favorite browser and have fun!","category":"page"},{"location":"develop/#How-to-run-tests","page":"Development","title":"How to run tests","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"After instantiating the project, go to PKGROOT, run (without the $ prompt)","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"$ julia --color=yes test/runtests.jl","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in your terminal.","category":"page"},{"location":"api/PSlibrary/","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary module","text":"CurrentModule = Pseudopotentials.PSlibrary","category":"page"},{"location":"api/PSlibrary/#Pseudopotentials.PSlibrary-module","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary module","text":"","category":"section"},{"location":"api/PSlibrary/","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary module","text":"Pages = [\"api/PSlibrary.md\"]\nDepth = 3","category":"page"},{"location":"api/PSlibrary/#Public-interfaces","page":"Pseudopotentials.PSlibrary module","title":"Public interfaces","text":"","category":"section"},{"location":"api/PSlibrary/","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary module","text":"list_elements\nlist_potentials\ndownload_potentials","category":"page"},{"location":"api/PSlibrary/#Pseudopotentials.PSlibrary.list_elements","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary.list_elements","text":"list_elements(pt=true)\n\nList all elements that has pseudopotentials available in PSlibrary. Print the periodic table if pt is true.\n\n\n\n\n\n","category":"function"},{"location":"api/PSlibrary/#Pseudopotentials.PSlibrary.list_potentials","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary.list_potentials","text":"list_potentials(element::Union{AbstractString,AbstractChar,Integer})\n\nList all pseudopotentials in PSlibrary for a specific element (abbreviation or index).\n\n\n\n\n\n","category":"function"},{"location":"api/PSlibrary/#Pseudopotentials.PSlibrary.download_potentials","page":"Pseudopotentials.PSlibrary module","title":"Pseudopotentials.PSlibrary.download_potentials","text":"download_potential(element::Union{AbstractString,AbstractChar,Integer})\n\nDownload one or multiple pseudopotentials from PSlibrary for a specific element.\n\n\n\n\n\n","category":"function"},{"location":"install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"To install this package, first, you need to install a julia executable from its official website. Version v1.0.0 and above is required. This package may not work on v0.7 and below.","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"If you are using a Mac, and have Homebrew installed, open Terminal.app and type:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"brew cask install julia","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Now I am using macOS as a standard platform to explain the following steps:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Open Terminal.app, and type julia to start a Julia session.\nRun\njulia> using Pkg; Pkg.update()\n\njulia> pkg\"add Pseudopotentials\"\nand wait for its finish.\nRun\njulia> using Pseudopotentials\nand have fun!\nWhile using, please keep this Julia session alive. Restarting may recompile the package and cost some time.","category":"page"},{"location":"install/#Reinstall","page":"Installation","title":"Reinstall","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"In the same Julia session, run\njulia> Pkg.rm(\"Pseudopotentials\"); Pkg.gc()\nPress ctrl+d to quit the current session. Start a new Julia session and repeat the above steps.","category":"page"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"CurrentModule = Pseudopotentials","category":"page"},{"location":"api/Pseudopotentials/#Pseudopotentials-module","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"","category":"section"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"Pages = [\"api/Pseudopotentials.md\"]\nDepth = 3","category":"page"},{"location":"api/Pseudopotentials/#Public-interfaces","page":"Pseudopotentials module","title":"Public interfaces","text":"","category":"section"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"pseudoformat","category":"page"},{"location":"api/Pseudopotentials/#Pseudopotentials.pseudoformat","page":"Pseudopotentials module","title":"Pseudopotentials.pseudoformat","text":"pseudoformat(data::AbstractString)\n\nReturn the pseudopotential format.\n\nThe pseudopotential file is assumed to be in the new UPF format. If it doesn't work, the pseudopotential format is determined by the file name:\n\n\"*.vdb or *.van\": Vanderbilt US pseudopotential code\n\"*.RRKJ3\": Andrea Dal Corso's code (old format)\nnone of the above: old PWscf norm-conserving format\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Pseudopotentials","category":"page"},{"location":"#Pseudopotentials","page":"Home","title":"Pseudopotentials","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Pseudopotentials.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Index for the complete list of documented functions and types.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The code is hosted on GitHub, with some continuous integration services to test its validity.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This repository is created and maintained by singularitti. You are very welcome to contribute.","category":"page"},{"location":"#Compatibility","page":"Home","title":"Compatibility","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia version: v1.0.0 to v1.6.2\nDependencies:\nAcuteML.jl v0.8.0 and above\nDataFrames.jl v0.14.0 and above\nJLD2.jl v0.1.0 and above\nOS: macOS, Linux, Windows, and FreeBSD\nArchitecture: x86, x64, ARM","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"install.md\",\n    \"api/api.md\",\n    \"api/PSlibrary.md\",\n]\nDepth = 3","category":"page"},{"location":"#main-index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
