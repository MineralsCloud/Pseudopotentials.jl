var documenterSearchIndex = {"docs":
[{"location":"develop/#How-to-contribute","page":"Development","title":"How to contribute","text":"","category":"section"},{"location":"develop/#Download-the-project","page":"Development","title":"Download the project","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Similar to section \"Installation\", run","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"julia> using Pkg\n\njulia> pkg\"dev Pseudopotentials\"","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in Julia REPL.","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"Then the package will be cloned to your local machine at a path. On macOS, by default is located at ~/.julia/dev/Pseudopotentials unless you modify the JULIA_DEPOT_PATH environment variable. (See Julia's official documentation on how to do this.) In the following text, we will call it PKGROOT.","category":"page"},{"location":"develop/#instantiating","page":"Development","title":"Instantiate the project","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Go to PKGROOT, start a new Julia session and run","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"julia> using Pkg; Pkg.instantiate()","category":"page"},{"location":"develop/#How-to-build-docs","page":"Development","title":"How to build docs","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"Usually, the up-to-state doc is available in here, but there are cases where users need to build the doc themselves.","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"After instantiating the project, go to PKGROOT, run (without the $ prompt)","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"$ julia --color=yes docs/make.jl","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in your terminal. In a while a folder PKGROOT/docs/build will appear. Open PKGROOT/docs/build/index.html with your favorite browser and have fun!","category":"page"},{"location":"develop/#How-to-run-tests","page":"Development","title":"How to run tests","text":"","category":"section"},{"location":"develop/","page":"Development","title":"Development","text":"After instantiating the project, go to PKGROOT, run (without the $ prompt)","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"$ julia --color=yes test/runtests.jl","category":"page"},{"location":"develop/","page":"Development","title":"Development","text":"in your terminal.","category":"page"},{"location":"install/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"To install this package, first, you need to install a julia executable from its official website. Version v1.0.0 and above is required. This package may not work on v0.7 and below.","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"If you are using a Mac, and have Homebrew installed, open Terminal.app and type:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"brew cask install julia","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Now I am using macOS as a standard platform to explain the following steps:","category":"page"},{"location":"install/","page":"Installation","title":"Installation","text":"Open Terminal.app, and type julia to start a Julia session.\nRun\njulia> using Pkg; Pkg.update()\n\njulia> pkg\"add Pseudopotentials\"\nand wait for its finish.\nRun\njulia> using Pseudopotentials\nand have fun!\nWhile using, please keep this Julia session alive. Restarting may recompile the package and cost some time.","category":"page"},{"location":"install/#Reinstall","page":"Installation","title":"Reinstall","text":"","category":"section"},{"location":"install/","page":"Installation","title":"Installation","text":"In the same Julia session, run\njulia> Pkg.rm(\"Pseudopotentials\"); Pkg.gc()\nPress ctrl+d to quit the current session. Start a new Julia session and repeat the above steps.","category":"page"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"CurrentModule = Pseudopotentials","category":"page"},{"location":"api/Pseudopotentials/#Pseudopotentials-module","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"","category":"section"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"Pages = [\"api/Pseudopotentials.md\"]\nDepth = 3","category":"page"},{"location":"api/Pseudopotentials/#Public-interfaces","page":"Pseudopotentials module","title":"Public interfaces","text":"","category":"section"},{"location":"api/Pseudopotentials/","page":"Pseudopotentials module","title":"Pseudopotentials module","text":"PseudopotentialFormat\nExchangeCorrelationFunctional\nPseudization","category":"page"},{"location":"api/Pseudopotentials/#Pseudopotentials.PseudopotentialFormat","page":"Pseudopotentials module","title":"Pseudopotentials.PseudopotentialFormat","text":"PseudopotentialFormat\n\nRepresent all possible pseudopotential file formats.\n\n\n\n\n\n","category":"type"},{"location":"api/Pseudopotentials/#Pseudopotentials.ExchangeCorrelationFunctional","page":"Pseudopotentials module","title":"Pseudopotentials.ExchangeCorrelationFunctional","text":"ExchangeCorrelationFunctional\n\nRepresent exchange-correlation functional types.\n\n\n\n\n\n","category":"type"},{"location":"api/Pseudopotentials/#Pseudopotentials.Pseudization","page":"Pseudopotentials module","title":"Pseudopotentials.Pseudization","text":"Pseudization\n\nRepresent the pseudization types.\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Pseudopotentials","category":"page"},{"location":"#Pseudopotentials","page":"Home","title":"Pseudopotentials","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Pseudopotentials.","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Index for the complete list of documented functions and types.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The code is hosted on GitHub, with some continuous integration services to test its validity.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This repository is created and maintained by singularitti. You are very welcome to contribute.","category":"page"},{"location":"#Compatibility","page":"Home","title":"Compatibility","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia version: v1.0.0 to v1.7.1\nOS: macOS, Linux, Windows, and FreeBSD\nArchitecture: x86, x64, ARM","category":"page"},{"location":"#Manual-Outline","page":"Home","title":"Manual Outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"install.md\",\n    \"develop.md\",\n    \"api/Pseudopotentials.md\",\n]\nDepth = 3","category":"page"},{"location":"#main-index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
